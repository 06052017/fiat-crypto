λ x : word128 * word128,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x1, x2)%core,
 ℤ x3 = Op (Syntax.Opp (Syntax.TWord 7) Syntax.TZ) (Return x2);
 uint128_t x5, ℤ x6 = addcarryx_u128ℤ(0x0, 0x0, x3);
 ℤ x7 = Op (Syntax.Opp (Syntax.TWord 7) Syntax.TZ) (Return x1);
 uint128_t x9, ℤ x10 = addcarryx_u128ℤ(x6, 0x0, x7);
 uint128_t x11 = (uint128_t) (x10 == 0 ? 0x0 : 0xffffffffffffffffffffffffffffffffL);
 uint128_t x12 = x11 & 0xffffffffffffffffffffffffL;
 uint128_t x14, uint8_t x15 = addcarryx_u128(0x0, x5, x12);
 ℤ x16 = 0x100000000000000000000000000000000L *ℤ x10;
 uint128_t x17 = x11 & 0xffffffff000000010000000000000000L;
 uint128_t x19, ℤ _ = addcarryx_u128ℤ(x9, x16, x17);
 uint128_t x22, uint8_t _ = addcarryx_u128(0x0, x15, x19);
 (Return x22, Return x14))
x
     : word128 * word128 → ReturnType (uint128_t * uint128_t)
