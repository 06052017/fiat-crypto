λ x x0 : word64 * word64 * word64 * word64,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x8, x9, x7, x5, (x14, x15, x13, x11))%core,
 uint128_t x16 = (uint128_t) x5 * x11;
 uint64_t x17 = (uint64_t) x16 & 0xffffffffffffffffL;
 uint64_t x18 = (uint64_t) (x16 >> 0x40);
 uint128_t x19 = (uint128_t) x5 * x13;
 uint64_t x20 = (uint64_t) x19 & 0xffffffffffffffffL;
 uint64_t x21 = (uint64_t) (x19 >> 0x40);
 uint128_t x22 = (uint128_t) x5 * x15;
 uint64_t x23 = (uint64_t) x22 & 0xffffffffffffffffL;
 uint64_t x24 = (uint64_t) (x22 >> 0x40);
 uint128_t x25 = (uint128_t) x5 * x14;
 uint64_t x26 = (uint64_t) x25 & 0xffffffffffffffffL;
 uint64_t x27 = (uint64_t) (x25 >> 0x40);
 uint64_t x29, bool x30 = addcarryx_u64(0x0, x18, x20);
 uint64_t x32, bool x33 = addcarryx_u64(x30, x21, x23);
 uint64_t x35, bool x36 = addcarryx_u64(x33, x24, x26);
 uint64_t x38, bool x39 = addcarryx_u64(0x0, x36, x27);
 uint64_t x40 = x38 + (bool) 0x10000000000000000L * x39;
 uint64_t x41 = x17 & 0xffffffffffffffffL;
 uint128_t x42 = (uint128_t) x41 * 0xffffffffffffffffL;
 uint64_t x43 = (uint64_t) x42 & 0xffffffffffffffffL;
 uint64_t x44 = (uint64_t) (x42 >> 0x40);
 uint128_t x45 = (uint128_t) x41 * 0xffffffff;
 uint64_t x46 = (uint64_t) x45 & 0xffffffffffffffffL;
 uint64_t x47 = (uint64_t) (x45 >> 0x40);
 uint128_t x48 = (uint128_t) x41 * 0xffffffff00000001L;
 uint64_t x49 = (uint64_t) x48 & 0xffffffffffffffffL;
 uint64_t x50 = (uint64_t) (x48 >> 0x40);
 uint64_t x52, bool x53 = addcarryx_u64(0x0, x44, x46);
 uint64_t x55, bool x56 = Op (Syntax.AddWithGetCarry 64 (Syntax.TWord 0) (Syntax.TWord 6) (Syntax.TWord 0) (Syntax.TWord 6) (Syntax.TWord 0)) (Return x53, Return x47, 0x0);
 uint64_t x58, bool x59 = addcarryx_u64(x56, 0x0, x49);
 uint64_t x61, bool x62 = addcarryx_u64(0x0, x59, x50);
 uint64_t _, bool x65 = addcarryx_u64(0x0, x17, x43);
 uint64_t x67, bool x68 = addcarryx_u64(x65, x29, x52);
 uint64_t x70, bool x71 = addcarryx_u64(x68, x32, x55);
 uint64_t x73, bool x74 = addcarryx_u64(x71, x35, x58);
 uint64_t x76, bool x77 = addcarryx_u64(0x0, x40, x61 + (bool) 0x10000000000000000L * x62);
 uint64_t x79, bool x80 = addcarryx_u64(0x0, x74, x76);
 uint64_t x81 = (uint64_t) x77 + x80;
 uint64_t x83, bool _ = Op (Syntax.AddWithGetCarry 64 (Syntax.TWord 0) (Syntax.TWord 6) (Syntax.TWord 0) (Syntax.TWord 6) (Syntax.TWord 0)) (0x0, Return x81, 0x0);
 uint128_t x85 = (uint128_t) x7 * x11;
 uint64_t x86 = (uint64_t) x85 & 0xffffffffffffffffL;
 uint64_t x87 = (uint64_t) (x85 >> 0x40);
 uint128_t x88 = (uint128_t) x7 * x13;
 uint64_t x89 = (uint64_t) x88 & 0xffffffffffffffffL;
 uint64_t x90 = (uint64_t) (x88 >> 0x40);
 uint128_t x91 = (uint128_t) x7 * x15;
 uint64_t x92 = (uint64_t) x91 & 0xffffffffffffffffL;
 uint64_t x93 = (uint64_t) (x91 >> 0x40);
 uint128_t x94 = (uint128_t) x7 * x14;
 uint64_t x95 = (uint64_t) x94 & 0xffffffffffffffffL;
 uint64_t x96 = (uint64_t) (x94 >> 0x40);
 uint64_t x98, bool x99 = addcarryx_u64(0x0, x87, x89);
 uint64_t x101, bool x102 = addcarryx_u64(x99, x90, x92);
 uint64_t x104, bool x105 = addcarryx_u64(x102, x93, x95);
 uint64_t x107, bool x108 = addcarryx_u64(0x0, x105, x96);
 uint64_t x110, bool x111 = addcarryx_u64(0x0, x67, x86);
 uint64_t x113, bool x114 = addcarryx_u64(x111, x70, x98);
 uint64_t x116, bool x117 = addcarryx_u64(x114, x73, x101);
 uint64_t x119, bool x120 = addcarryx_u64(x117, x79, x104);
 uint64_t x122, bool x123 = addcarryx_u64(0x0, x83, x107 + (bool) 0x10000000000000000L * x108);
 uint64_t x125, bool x126 = addcarryx_u64(0x0, x120, x122);
 uint64_t x127 = (uint64_t) x123 + x126;
 uint64_t x128 = x110 & 0xffffffffffffffffL;
 uint128_t x129 = (uint128_t) x128 * 0xffffffffffffffffL;
 uint64_t x130 = (uint64_t) x129 & 0xffffffffffffffffL;
 uint64_t x131 = (uint64_t) (x129 >> 0x40);
 uint128_t x132 = (uint128_t) x128 * 0xffffffff;
 uint64_t x133 = (uint64_t) x132 & 0xffffffffffffffffL;
 uint64_t x134 = (uint64_t) (x132 >> 0x40);
 uint128_t x135 = (uint128_t) x128 * 0xffffffff00000001L;
 uint64_t x136 = (uint64_t) x135 & 0xffffffffffffffffL;
 uint64_t x137 = (uint64_t) (x135 >> 0x40);
 uint64_t x139, bool x140 = addcarryx_u64(0x0, x131, x133);
 uint64_t x142, bool x143 = Op (Syntax.AddWithGetCarry 64 (Syntax.TWord 0) (Syntax.TWord 6) (Syntax.TWord 0) (Syntax.TWord 6) (Syntax.TWord 0)) (Return x140, Return x134, 0x0);
 uint64_t x145, bool x146 = addcarryx_u64(x143, 0x0, x136);
 uint64_t x148, bool x149 = addcarryx_u64(0x0, x146, x137);
 uint64_t _, bool x152 = addcarryx_u64(0x0, x110, x130);
 uint64_t x154, bool x155 = addcarryx_u64(x152, x113, x139);
 uint64_t x157, bool x158 = addcarryx_u64(x155, x116, x142);
 uint64_t x160, bool x161 = addcarryx_u64(x158, x119, x145);
 uint64_t x163, bool x164 = addcarryx_u64(0x0, x125, x148 + (bool) 0x10000000000000000L * x149);
 uint64_t x166, bool x167 = addcarryx_u64(0x0, x161, x163);
 uint64_t x168 = (uint64_t) x164 + x167;
 uint64_t x170, bool _ = addcarryx_u64(0x0, x168, x127);
 uint128_t x172 = (uint128_t) x9 * x11;
 uint64_t x173 = (uint64_t) x172 & 0xffffffffffffffffL;
 uint64_t x174 = (uint64_t) (x172 >> 0x40);
 uint128_t x175 = (uint128_t) x9 * x13;
 uint64_t x176 = (uint64_t) x175 & 0xffffffffffffffffL;
 uint64_t x177 = (uint64_t) (x175 >> 0x40);
 uint128_t x178 = (uint128_t) x9 * x15;
 uint64_t x179 = (uint64_t) x178 & 0xffffffffffffffffL;
 uint64_t x180 = (uint64_t) (x178 >> 0x40);
 uint128_t x181 = (uint128_t) x9 * x14;
 uint64_t x182 = (uint64_t) x181 & 0xffffffffffffffffL;
 uint64_t x183 = (uint64_t) (x181 >> 0x40);
 uint64_t x185, bool x186 = addcarryx_u64(0x0, x174, x176);
 uint64_t x188, bool x189 = addcarryx_u64(x186, x177, x179);
 uint64_t x191, bool x192 = addcarryx_u64(x189, x180, x182);
 uint64_t x194, bool x195 = addcarryx_u64(0x0, x192, x183);
 uint64_t x197, bool x198 = addcarryx_u64(0x0, x154, x173);
 uint64_t x200, bool x201 = addcarryx_u64(x198, x157, x185);
 uint64_t x203, bool x204 = addcarryx_u64(x201, x160, x188);
 uint64_t x206, bool x207 = addcarryx_u64(x204, x166, x191);
 uint64_t x209, bool x210 = addcarryx_u64(0x0, x170, x194 + (bool) 0x10000000000000000L * x195);
 uint64_t x212, bool x213 = addcarryx_u64(0x0, x207, x209);
 uint64_t x214 = (uint64_t) x210 + x213;
 uint64_t x215 = x197 & 0xffffffffffffffffL;
 uint128_t x216 = (uint128_t) x215 * 0xffffffffffffffffL;
 uint64_t x217 = (uint64_t) x216 & 0xffffffffffffffffL;
 uint64_t x218 = (uint64_t) (x216 >> 0x40);
 uint128_t x219 = (uint128_t) x215 * 0xffffffff;
 uint64_t x220 = (uint64_t) x219 & 0xffffffffffffffffL;
 uint64_t x221 = (uint64_t) (x219 >> 0x40);
 uint128_t x222 = (uint128_t) x215 * 0xffffffff00000001L;
 uint64_t x223 = (uint64_t) x222 & 0xffffffffffffffffL;
 uint64_t x224 = (uint64_t) (x222 >> 0x40);
 uint64_t x226, bool x227 = addcarryx_u64(0x0, x218, x220);
 uint64_t x229, bool x230 = Op (Syntax.AddWithGetCarry 64 (Syntax.TWord 0) (Syntax.TWord 6) (Syntax.TWord 0) (Syntax.TWord 6) (Syntax.TWord 0)) (Return x227, Return x221, 0x0);
 uint64_t x232, bool x233 = addcarryx_u64(x230, 0x0, x223);
 uint64_t x235, bool x236 = addcarryx_u64(0x0, x233, x224);
 uint64_t _, bool x239 = addcarryx_u64(0x0, x197, x217);
 uint64_t x241, bool x242 = addcarryx_u64(x239, x200, x226);
 uint64_t x244, bool x245 = addcarryx_u64(x242, x203, x229);
 uint64_t x247, bool x248 = addcarryx_u64(x245, x206, x232);
 uint64_t x250, bool x251 = addcarryx_u64(0x0, x212, x235 + (bool) 0x10000000000000000L * x236);
 uint64_t x253, bool x254 = addcarryx_u64(0x0, x248, x250);
 uint64_t x255 = (uint64_t) x251 + x254;
 uint64_t x257, bool _ = addcarryx_u64(0x0, x255, x214);
 uint128_t x259 = (uint128_t) x8 * x11;
 uint64_t x260 = (uint64_t) x259 & 0xffffffffffffffffL;
 uint64_t x261 = (uint64_t) (x259 >> 0x40);
 uint128_t x262 = (uint128_t) x8 * x13;
 uint64_t x263 = (uint64_t) x262 & 0xffffffffffffffffL;
 uint64_t x264 = (uint64_t) (x262 >> 0x40);
 uint128_t x265 = (uint128_t) x8 * x15;
 uint64_t x266 = (uint64_t) x265 & 0xffffffffffffffffL;
 uint64_t x267 = (uint64_t) (x265 >> 0x40);
 uint128_t x268 = (uint128_t) x8 * x14;
 uint64_t x269 = (uint64_t) x268 & 0xffffffffffffffffL;
 uint64_t x270 = (uint64_t) (x268 >> 0x40);
 uint64_t x272, bool x273 = addcarryx_u64(0x0, x261, x263);
 uint64_t x275, bool x276 = addcarryx_u64(x273, x264, x266);
 uint64_t x278, bool x279 = addcarryx_u64(x276, x267, x269);
 uint64_t x281, bool x282 = addcarryx_u64(0x0, x279, x270);
 uint64_t x284, bool x285 = addcarryx_u64(0x0, x241, x260);
 uint64_t x287, bool x288 = addcarryx_u64(x285, x244, x272);
 uint64_t x290, bool x291 = addcarryx_u64(x288, x247, x275);
 uint64_t x293, bool x294 = addcarryx_u64(x291, x253, x278);
 uint64_t x296, bool _ = addcarryx_u64(0x0, x257, x281 + (bool) 0x10000000000000000L * x282);
 uint64_t x299, bool _ = addcarryx_u64(0x0, x294, x296);
 uint64_t x301 = x284 & 0xffffffffffffffffL;
 uint128_t x302 = (uint128_t) x301 * 0xffffffffffffffffL;
 uint64_t x303 = (uint64_t) x302 & 0xffffffffffffffffL;
 uint64_t x304 = (uint64_t) (x302 >> 0x40);
 uint128_t x305 = (uint128_t) x301 * 0xffffffff;
 uint64_t x306 = (uint64_t) x305 & 0xffffffffffffffffL;
 uint64_t x307 = (uint64_t) (x305 >> 0x40);
 uint128_t x308 = (uint128_t) x301 * 0xffffffff00000001L;
 uint64_t x309 = (uint64_t) x308 & 0xffffffffffffffffL;
 uint64_t x310 = (uint64_t) (x308 >> 0x40);
 uint64_t x312, bool x313 = addcarryx_u64(0x0, x304, x306);
 uint64_t x315, bool x316 = Op (Syntax.AddWithGetCarry 64 (Syntax.TWord 0) (Syntax.TWord 6) (Syntax.TWord 0) (Syntax.TWord 6) (Syntax.TWord 0)) (Return x313, Return x307, 0x0);
 uint64_t x318, bool x319 = addcarryx_u64(x316, 0x0, x309);
 uint64_t x321, bool x322 = addcarryx_u64(0x0, x319, x310);
 uint64_t _, bool x325 = addcarryx_u64(0x0, x284, x303);
 uint64_t x327, bool x328 = addcarryx_u64(x325, x287, x312);
 uint64_t x330, bool x331 = addcarryx_u64(x328, x290, x315);
 uint64_t x333, bool x334 = addcarryx_u64(x331, x293, x318);
 uint64_t x336, bool _ = addcarryx_u64(0x0, x299, x321 + (bool) 0x10000000000000000L * x322);
 uint64_t x339, bool _ = addcarryx_u64(0x0, x334, x336);
 (Return x339, Return x333, Return x330, Return x327))
(x, x0)%core
     : word64 * word64 * word64 * word64 → word64 * word64 * word64 * word64 → ReturnType (uint64_t * uint64_t * uint64_t * uint64_t)
