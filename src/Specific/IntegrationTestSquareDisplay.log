λ x : word64 * word64 * word64 * word64 * word64,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x7, x8, x6, x4, x2)%core,
 uint64_t x9 = x2 * 0x2;
 uint64_t x10 = x4 * 0x2;
 uint64_t x11 = x6 * 0x2;
 uint64_t x12 = x11 * 0x13;
 uint64_t x13 = x7 * 0x13;
 uint64_t x14 = x13 * 0x2;
 uint128_t x15 = (uint128_t) x2 * x2;
 uint128_t x16 = (uint128_t) x14 * x4;
 uint128_t x17 = x15 + x16;
 uint128_t x18 = (uint128_t) x12 * x8;
 uint128_t x19 = x17 + x18;
 uint128_t x20 = (uint128_t) x9 * x4;
 uint128_t x21 = (uint128_t) x14 * x6;
 uint128_t x22 = x20 + x21;
 uint128_t x23 = (uint128_t) x8 * x8;
 uint128_t x24 = x23 * 0x13;
 uint128_t x25 = x22 + x24;
 uint128_t x26 = (uint128_t) x9 * x6;
 uint128_t x27 = (uint128_t) x4 * x4;
 uint128_t x28 = x26 + x27;
 uint128_t x29 = (uint128_t) x14 * x8;
 uint128_t x30 = x28 + x29;
 uint128_t x31 = (uint128_t) x9 * x8;
 uint128_t x32 = (uint128_t) x10 * x6;
 uint128_t x33 = x31 + x32;
 uint128_t x34 = (uint128_t) x7 * x13;
 uint128_t x35 = x33 + x34;
 uint128_t x36 = (uint128_t) x9 * x7;
 uint128_t x37 = (uint128_t) x10 * x8;
 uint128_t x38 = x36 + x37;
 uint128_t x39 = (uint128_t) x6 * x6;
 uint128_t x40 = x38 + x39;
 uint64_t x41 = (uint64_t) (x19 >> 0x33);
 uint64_t x42 = (uint64_t) x19 & 0x7ffffffffffff;
 uint128_t x43 = x41 + x25;
 uint64_t x44 = (uint64_t) (x43 >> 0x33);
 uint64_t x45 = (uint64_t) x43 & 0x7ffffffffffff;
 uint128_t x46 = x44 + x30;
 uint64_t x47 = (uint64_t) (x46 >> 0x33);
 uint64_t x48 = (uint64_t) x46 & 0x7ffffffffffff;
 uint128_t x49 = x47 + x35;
 uint64_t x50 = (uint64_t) (x49 >> 0x33);
 uint64_t x51 = (uint64_t) x49 & 0x7ffffffffffff;
 uint128_t x52 = x50 + x40;
 uint64_t x53 = (uint64_t) (x52 >> 0x33);
 uint64_t x54 = (uint64_t) x52 & 0x7ffffffffffff;
 uint64_t x55 = 0x13 * x53;
 uint64_t x56 = x42 + x55;
 uint64_t x57 = x56 >> 0x33;
 uint64_t x58 = x56 & 0x7ffffffffffff;
 uint64_t x59 = x57 + x45;
 uint64_t x60 = x59 >> 0x33;
 uint64_t x61 = x59 & 0x7ffffffffffff;
 uint64_t x62 = x60 + x48;
 (Return x54, Return x51, Return x62, Return x61, Return x58))
x
     : word64 * word64 * word64 * word64 * word64 → ReturnType (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t)
