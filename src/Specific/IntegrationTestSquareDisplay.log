λ x : word64 * word64 * word64 * word64 * word64,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x7, x8, x6, x4, x2)%core,
 uint128_t x9 = (uint128_t) x2 * x7;
 uint128_t x10 = (uint128_t) x7 * x2;
 uint128_t x11 = x9 + x10;
 uint128_t x12 = (uint128_t) x8 * x4;
 uint128_t x13 = x11 + x12;
 uint128_t x14 = (uint128_t) x4 * x8;
 uint128_t x15 = x13 + x14;
 uint128_t x16 = (uint128_t) x6 * x6;
 uint128_t x17 = x15 + x16;
 uint128_t x18 = (uint128_t) x2 * x8;
 uint128_t x19 = (uint128_t) x8 * x2;
 uint128_t x20 = x18 + x19;
 uint128_t x21 = (uint128_t) x4 * x6;
 uint128_t x22 = x20 + x21;
 uint128_t x23 = (uint128_t) x6 * x4;
 uint128_t x24 = x22 + x23;
 uint64_t x25 = x7 * 0x13;
 uint128_t x26 = (uint128_t) x25 * x7;
 uint128_t x27 = x24 + x26;
 uint128_t x28 = (uint128_t) x2 * x6;
 uint128_t x29 = (uint128_t) x6 * x2;
 uint128_t x30 = x28 + x29;
 uint128_t x31 = (uint128_t) x4 * x4;
 uint128_t x32 = x30 + x31;
 uint64_t x33 = x7 * 0x13;
 uint128_t x34 = (uint128_t) x33 * x8;
 uint128_t x35 = x32 + x34;
 uint64_t x36 = x8 * 0x13;
 uint128_t x37 = (uint128_t) x36 * x7;
 uint128_t x38 = x35 + x37;
 uint128_t x39 = (uint128_t) x2 * x4;
 uint128_t x40 = (uint128_t) x4 * x2;
 uint128_t x41 = x39 + x40;
 uint64_t x42 = x7 * 0x13;
 uint128_t x43 = (uint128_t) x42 * x6;
 uint128_t x44 = x41 + x43;
 uint64_t x45 = x6 * 0x13;
 uint128_t x46 = (uint128_t) x45 * x7;
 uint128_t x47 = x44 + x46;
 uint64_t x48 = x8 * 0x13;
 uint128_t x49 = (uint128_t) x48 * x8;
 uint128_t x50 = x47 + x49;
 uint128_t x51 = (uint128_t) x2 * x2;
 uint64_t x52 = x7 * 0x13;
 uint128_t x53 = (uint128_t) x52 * x4;
 uint128_t x54 = x51 + x53;
 uint64_t x55 = x4 * 0x13;
 uint128_t x56 = (uint128_t) x55 * x7;
 uint128_t x57 = x54 + x56;
 uint64_t x58 = x6 * 0x13;
 uint128_t x59 = (uint128_t) x58 * x8;
 uint128_t x60 = x57 + x59;
 uint64_t x61 = x8 * 0x13;
 uint128_t x62 = (uint128_t) x61 * x6;
 uint128_t x63 = x60 + x62;
 uint64_t x64 = (uint64_t) (x63 >> 0x33);
 uint128_t x65 = x64 + x50;
 uint64_t x66 = (uint64_t) (x65 >> 0x33);
 uint128_t x67 = x66 + x38;
 uint64_t x68 = (uint64_t) (x67 >> 0x33);
 uint128_t x69 = x68 + x27;
 uint64_t x70 = (uint64_t) (x69 >> 0x33);
 uint128_t x71 = x70 + x17;
 uint64_t x72 = (uint64_t) x63 & 0x7ffffffffffff;
 uint64_t x73 = (uint64_t) (x71 >> 0x33);
 uint64_t x74 = 0x13 * x73;
 uint64_t x75 = x72 + x74;
 uint64_t x76 = x75 >> 0x33;
 uint64_t x77 = (uint64_t) x65 & 0x7ffffffffffff;
 uint64_t x78 = x76 + x77;
 uint64_t x79 = (uint64_t) x71 & 0x7ffffffffffff;
 uint64_t x80 = (uint64_t) x69 & 0x7ffffffffffff;
 uint64_t x81 = x78 >> 0x33;
 uint64_t x82 = (uint64_t) x67 & 0x7ffffffffffff;
 uint64_t x83 = x81 + x82;
 uint64_t x84 = x78 & 0x7ffffffffffff;
 uint64_t x85 = x75 & 0x7ffffffffffff;
 (Return x79, Return x80, Return x83, Return x84, Return x85))
x
     : word64 * word64 * word64 * word64 * word64 → ReturnType (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t)
