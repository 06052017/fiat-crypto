λ x : word32 * word32 * word32 * word32 * word32 * word32 * word32,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x11, x12, x10, x8, x6, x4, x2)%core,
 uint32_t x14, uint8_t x15 = subborrow_u32(0x0, 0x0, x2);
 uint32_t x17, uint8_t x18 = subborrow_u32(x15, 0x0, x4);
 uint32_t x20, uint8_t x21 = subborrow_u32(x18, 0x0, x6);
 uint32_t x23, uint8_t x24 = subborrow_u32(x21, 0x0, x8);
 uint32_t x26, uint8_t x27 = subborrow_u32(x24, 0x0, x10);
 uint32_t x29, uint8_t x30 = subborrow_u32(x27, 0x0, x12);
 uint32_t x32, uint8_t x33 = subborrow_u32(x30, 0x0, x11);
 uint32_t x34 = (uint32_t)cmovznz(x33, 0x0, 0xffffffff);
 uint32_t x35 = (x34 & 0xffffffe3);
 uint32_t x37, uint8_t x38 = addcarryx_u32(0x0, x14, x35);
 uint32_t x39 = (x34 & 0xffffffff);
 uint32_t x41, uint8_t x42 = addcarryx_u32(x38, x17, x39);
 uint32_t x43 = (x34 & 0xffffffff);
 uint32_t x45, uint8_t x46 = addcarryx_u32(x42, x20, x43);
 uint32_t x47 = (x34 & 0xffffffff);
 uint32_t x49, uint8_t x50 = addcarryx_u32(x46, x23, x47);
 uint32_t x51 = (x34 & 0xffffffff);
 uint32_t x53, uint8_t x54 = addcarryx_u32(x50, x26, x51);
 uint32_t x55 = (x34 & 0xffffffff);
 uint32_t x57, uint8_t x58 = addcarryx_u32(x54, x29, x55);
 uint32_t x59 = (x34 & 0xfffff);
 uint32_t x61, uint8_t _ = addcarryx_u32(x58, x32, x59);
 (Return x61, Return x57, Return x53, Return x49, Return x45, Return x41, Return x37))
x
     : word32 * word32 * word32 * word32 * word32 * word32 * word32 → ReturnType (uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t * uint32_t)
