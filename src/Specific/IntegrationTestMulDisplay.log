λ x x0 : word64 * word64 * word64 * word64 * word64,
Interp-η
(λ var : Syntax.base_type → Type,
 λ '(x10, x11, x9, x7, x5, (x18, x19, x17, x15, x13))%core,
 uint128_t x20 = (uint128_t) x5 * x18;
 uint128_t x21 = (uint128_t) x10 * x13;
 uint128_t x22 = x20 + x21;
 uint128_t x23 = (uint128_t) x11 * x15;
 uint128_t x24 = x22 + x23;
 uint128_t x25 = (uint128_t) x7 * x19;
 uint128_t x26 = x24 + x25;
 uint128_t x27 = (uint128_t) x9 * x17;
 uint128_t x28 = x26 + x27;
 uint128_t x29 = (uint128_t) x5 * x19;
 uint128_t x30 = (uint128_t) x11 * x13;
 uint128_t x31 = x29 + x30;
 uint128_t x32 = (uint128_t) x7 * x17;
 uint128_t x33 = x31 + x32;
 uint128_t x34 = (uint128_t) x9 * x15;
 uint128_t x35 = x33 + x34;
 uint64_t x36 = x10 * 0x13;
 uint128_t x37 = (uint128_t) x36 * x18;
 uint128_t x38 = x35 + x37;
 uint128_t x39 = (uint128_t) x5 * x17;
 uint128_t x40 = (uint128_t) x9 * x13;
 uint128_t x41 = x39 + x40;
 uint128_t x42 = (uint128_t) x7 * x15;
 uint128_t x43 = x41 + x42;
 uint64_t x44 = x10 * 0x13;
 uint128_t x45 = (uint128_t) x44 * x19;
 uint128_t x46 = x43 + x45;
 uint64_t x47 = x11 * 0x13;
 uint128_t x48 = (uint128_t) x47 * x18;
 uint128_t x49 = x46 + x48;
 uint128_t x50 = (uint128_t) x5 * x15;
 uint128_t x51 = (uint128_t) x7 * x13;
 uint128_t x52 = x50 + x51;
 uint64_t x53 = x10 * 0x13;
 uint128_t x54 = (uint128_t) x53 * x17;
 uint128_t x55 = x52 + x54;
 uint64_t x56 = x9 * 0x13;
 uint128_t x57 = (uint128_t) x56 * x18;
 uint128_t x58 = x55 + x57;
 uint64_t x59 = x11 * 0x13;
 uint128_t x60 = (uint128_t) x59 * x19;
 uint128_t x61 = x58 + x60;
 uint128_t x62 = (uint128_t) x5 * x13;
 uint64_t x63 = x10 * 0x13;
 uint128_t x64 = (uint128_t) x63 * x15;
 uint128_t x65 = x62 + x64;
 uint64_t x66 = x7 * 0x13;
 uint128_t x67 = (uint128_t) x66 * x18;
 uint128_t x68 = x65 + x67;
 uint64_t x69 = x9 * 0x13;
 uint128_t x70 = (uint128_t) x69 * x19;
 uint128_t x71 = x68 + x70;
 uint64_t x72 = x11 * 0x13;
 uint128_t x73 = (uint128_t) x72 * x17;
 uint128_t x74 = x71 + x73;
 uint64_t x75 = (uint64_t) (x74 >> 0x33);
 uint128_t x76 = x75 + x61;
 uint64_t x77 = (uint64_t) (x76 >> 0x33);
 uint128_t x78 = x77 + x49;
 uint64_t x79 = (uint64_t) (x78 >> 0x33);
 uint128_t x80 = x79 + x38;
 uint64_t x81 = (uint64_t) (x80 >> 0x33);
 uint128_t x82 = x81 + x28;
 uint64_t x83 = (uint64_t) x74 & 0x7ffffffffffff;
 uint64_t x84 = (uint64_t) (x82 >> 0x33);
 uint64_t x85 = 0x13 * x84;
 uint64_t x86 = x83 + x85;
 uint64_t x87 = x86 >> 0x33;
 uint64_t x88 = (uint64_t) x76 & 0x7ffffffffffff;
 uint64_t x89 = x87 + x88;
 uint64_t x90 = (uint64_t) x82 & 0x7ffffffffffff;
 uint64_t x91 = (uint64_t) x80 & 0x7ffffffffffff;
 uint64_t x92 = x89 >> 0x33;
 uint64_t x93 = (uint64_t) x78 & 0x7ffffffffffff;
 uint64_t x94 = x92 + x93;
 uint64_t x95 = x89 & 0x7ffffffffffff;
 uint64_t x96 = x86 & 0x7ffffffffffff;
 (Return x90, Return x91, Return x94, Return x95, Return x96))
(x, x0)%core
     : word64 * word64 * word64 * word64 * word64 → word64 * word64 * word64 * word64 * word64 → ReturnType (uint64_t * uint64_t * uint64_t * uint64_t * uint64_t)
